# Enable Home Assistant API
#api:
#  encryption:
#    key: "UM1ow3iT15L7uBi5/YqCOnlXZPeKyosjBZNl2hzcfsM="

#ota:
#  password: "50be2a475f519ff0d6c932f08a7fd9cf"



# Version info, for full change log:- https://github.com/Uksa007/esphome-jk-bms-can/discussions/2
# V1.13.3 Improve compatibility with Deye and other inverters
# V1.13.2 Send Max Temperature of T1, T2 to inverter
# V1.13.1 Fix compile issues with new version of ESPhome 2023.4.0, set rebulk offset to 2.5
substitutions:
# --------------------------
# prefix name that will appear in esphome and homeassistant for JK BMS entitys.
  jk_name: JK

# prefix name that will appear in esphome and homeassistant for Deye Inverter entitys.
  deye_name: Deye
  
# --------------------------
# Number of Battery modules max 8. Each LX U5.4-L battery is 5.4kWh, select the number closest to your capactiy eg 3.2V * 280Ah * 16 = 14.3kWh
  batt_modules: "3"

# --------------------------------------
# Battery Charging setting:
# This is max charging amps eg 50A, for Bulk - Constant Current charging(CC), should be at least 10A less than BMS charge current protection, 0.5C max 
# will be automatically limited to 95% BMS charge current protection
  charge_a: "100"

# the minimum the charge current can be reduced to, if a limit caluclates a lower value charging will be set to 0 (off)
  min_charge_a: "2"

# Balance Voltage for Constant Voltage charging(CV). This is the balance voltage you want the inverter to charge with 3.45v per cell. Value will be multiplied by cells reported from the BMS. 
  balance_v: "55.3"

  # this controller takes care when balancing is finished
  balance_delta: "0.005"

  balance_v_slider_min: "52.8" # (3.3 * 16 cells = 52.8) min value for GUI slider, recommended LiFePo4 = 3.3, LiIon = 3.8
  balance_v_slider_max: "58.4"  # (3.65 * 16 cells = 58.4) max value for GUI slider, recommended LiFePo4 = 3.6, LiIon = 4.2

# Absorption time in seconds to hold charge voltage after charge voltage is reached eg 120 seconds
# timer will be reset if balance voltage is not reached yet when balance voltage is set higher than absorption voltage
# and will also be reset when balancing is active
  absorption_time: "60"

# --------------------------------------
# Battery Discharge setting:
# Max discharge amps eg 100, should be at least 10A less than BMS over dischange current protection, 0.5C max
# will be reset if higher than 95% of overdischarge current protection of the BMS
  discharge_a: "100"

# the minimum the discharge current can be reduced to, if a limit caluclates a lower value discharging will be set to 0 (off)
  min_discharge_a: "2"

# Minimum discharge voltage eg 48v/16 = 3V per cell
  min_dischange_v: "48"

  min_dischange_v_slider_min: "40"   # (2.5 * 16 cells = 40)   min value for GUI slider, recommended LiFePo4 = 2.5, LiIon = 2.5
  min_dischange_v_slider_max: "51.2" # (3.2 * 16 cells = 51.2) min value for GUI slider, recommended LiFePo4 = 3.2, LiIon = 3.5

# --------------------------------------
# Battery State of Health (SOH) setting:
# Maximum charging cycles is used to calculate the battey SOH, LF280K=6000.0 LF280=3000.0 (decimal is required)
  max_cycles: "6000.0"

# --------------------------------------
# Aditional wire ntc temperature sensor which is connected directly to the ESP.
# Will start to reduce current at temperature_wire_recovery and set current to 0 at temperature_wire_protection.
  use_wire_temperature_sensor: "false"
  temperature_wire_recovery: "80.0"
  temperature_wire_protection: "100.0"

# --------------------------------------
# ESP32 CAN/Serail port pins:
# GPIO pins your CAN bus transceiver(TJA1050) is connected to the ESP, note! TX->TX and RX->RX. 
  can_tx_pin: GPIO7 # GPIO23
  can_rx_pin: GPIO9 # GPIO22
# GPIO pins your JK-BMS RS485(TTL) is connected to the ESP TX->RX and RX->TX. 
  tx_pin: GPIO18 # GPIO17
  rx_pin: GPIO16 # GPIO16

# GPIO pins your Modbus controller is connected to the ESP, note! TX->TX and RX->RX. 
  modbus_tx_pin: GPIO11
  modbus_rx_pin: GPIO12

# --------------------------------------
esphome:
  name: hjdc          
  friendly_name: HJDC # (H)ome Assistant - (J)K - (D)eye - (C)ontroller
  #on_boot:
  #  then:
  #    - switch.turn_on: inverter_charging
  #    - switch.turn_on: inverter_discharging
  platformio_options:
    upload_speed: 115200
    board_build.f_cpu: 240000000L
    #board_build.mcu: esp32s2
    #board_build.extra_flags:
    #  - "-DARDUINO_USB_CDC_ON_BOOT=0"

esp32:
#  board: esp32doit-devkit-v1
  
  board: lolin_s2_mini
  variant: ESP32S2

  framework:
    # type: arduino
    # version: recommended
    # version: 2.0.3
    # platform_version: 4.4.0
    
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_ESP_CONSOLE_USB_CDC: y

button:
  - platform: restart
    id: restart_button
    internal: true

wifi:
  reboot_timeout: 60min
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #domain: !secret domain

  ap:
#    ssid: "Jk-Bms Fallback Hotspot"
    password: "B3ytP03VQjeh"

#web_server:
#  port: 80
#  local: true
#  auth:
#    username: "HJDC" # !secret jk_bms_web_server_username
#    password: "HJDC" # !secret jk_bms_web_server_password

ota:

logger:
  baud_rate: 115200
  hardware_uart: USB_CDC # USB_CDC
  level: INFO

# Please use the native `api` component instead of the `mqtt` section
# if you use Home Assistant. The native API is more lightweight.
api:
  reboot_timeout: 1440min

#mqtt:
#  broker: !secret mqtt_host
#  username: !secret mqtt_username
#  password: !secret mqtt_password
#  id: mqtt_client

output:
  - platform: gpio
    pin: 15 # 2
    id: led
    inverted: false

light:
  - platform: binary
    output: led
    id: led_builtin
    name: "${jk_name} Builtin LED"
    internal: true

uart:
  - id: mod_bus
    tx_pin: ${modbus_tx_pin}
    rx_pin: ${modbus_rx_pin}
    baud_rate: 9600
    stop_bits: 1

modbus:
  id: modbus1
  uart_id: mod_bus
  # flow_control_pin: 4
 
modbus_controller:
  - id: modbus_deye
    address: 0x1
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 4s

# binary_sensor:
  
  # Modbus to DEYE Inverter
  # - platform: modbus_controller
  #   modbus_controller_id: modbus_deye
  #   skip_updates: 5
  #   name: "${deye_name} AC INV Relay" # bit 0
  #   id: deye_AC_INV_relay
  #   register_type: holding
  #   address: 552
  #   bitmask: 0x1
 
  # - platform: modbus_controller
  #   modbus_controller_id: modbus_deye
  #   skip_updates: 5
  #   name: "${deye_name} AC Load Relay Reserved" # bit 1
  #   id: deye_AC_Load_relay_Reserved
  #   register_type: holding
  #   address: 552
  #   bitmask: 0x2
 
  # - platform: modbus_controller
  #   modbus_controller_id: modbus_deye
  #   skip_updates: 5
  #   name: "${deye_name} AC Grid Relay" # bit 2
  #   id: deye_AC_grid_relay
  #   register_type: holding
  #   address: 552
  #   bitmask: 0x4
 
  # - platform: modbus_controller
  #   modbus_controller_id: modbus_deye
  #   skip_updates: 5
  #   name: "${deye_name} AC Generator Relay" # bit 3
  #   id: deye_AC_Generator_relay
  #   register_type: holding
  #   address: 552
  #   bitmask: 0x8
 
  # - platform: modbus_controller
  #   modbus_controller_id: modbus_deye
  #   skip_updates: 5
  #   name: "${deye_name} Turn Off/On Status"
  #   id: deye_Turn_off_on_status
  #   register_type: holding
  #   address: 551
  #   bitmask: 0x1

sensor:
  # NTC Aditional BMS Wire Temperature Sensor
  - platform: adc
    id: source_sensor
    pin: GPIO2
    update_interval: never
    attenuation: 11dB
  - platform: resistance
    id: resistance_sensor
    sensor: source_sensor
    configuration: DOWNSTREAM
    resistor: 10kOhm
  - platform: ntc
    id: temperature_wire
    sensor: resistance_sensor
    name: "${jk_name} Temperature Wire"
    calibration:
      b_constant: 3950
      reference_temperature: 25°C
      reference_resistance: 10kOhm
    filters:
      - sliding_window_moving_average:
          window_size: 100
          send_every: 100
    accuracy_decimals: 0
  # JK BMS
  
# Uptime sensor
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();        

  # Modbus to DEYE Inverter
  - platform: template
    name: "${deye_name} PV Total Power"
    id: deye_pv_total_power
    device_class: "power"
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Heat Sink Temperature"
    id: deye_heat_sink_temeratur
    register_type: holding
    address: 541
    unit_of_measurement: "°C"
    value_type: S_WORD
    accuracy_decimals: 1
    filters:
      - offset: -1000
      - multiply:  0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Load Frequency"
    id: deye_load_frequency
    register_type: holding
    address: 655
    unit_of_measurement: "Hz"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Inverter Frequency"
    id: deye_inverter_frequency
    register_type: holding
    address: 638
    unit_of_measurement: "Hz"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV1 Power"
    id: deye_PV1_Power
    register_type: holding
    address: 672
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV2 Power"
    id: deye_PV2_Power
    register_type: holding
    address: 673
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: U_WORD
    lambda: |-
      id(deye_pv_total_power).publish_state(x + id(deye_PV1_Power).state);
      return x ;
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV1 Voltage"
    id: deye_PV1_Voltage
    register_type: holding
    address: 676
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV2 Voltage"
    id: deye_PV2_Voltage
    register_type: holding
    address: 678
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV1 Current"
    id: deye_PV1_Current
    register_type: holding
    address: 677
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} PV2 Current"
    id: deye_PV2_Current
    register_type: holding
    address: 679
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Load Consumption"
    id: deye_Daily_Load_Consumption
    icon: mdi:home-lightning-bolt
    register_type: holding
    address: 526
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Production"
    id: deye_Daily_Production
    icon: mdi:solar-power
    register_type: holding
    address: 529
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily PV1 Production"
    id: deye_Daily_PV1_Production
    icon: mdi:solar-power
    register_type: holding
    address: 530
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
  
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily PV2 Production"
    id: deye_Daily_PV2_Production
    icon: mdi:solar-power
    register_type: holding
    address: 531
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Total PV Production"
    id: deye_Total_PV_Production
    register_type: holding
    address: 534
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Total Grid Power"   # Grid side total power
    id: deye_Total_Grid_Power
    register_type: holding
    address: 625
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Energy Bought"
    id: deye_Daily_Energy_Bought
    icon: mdi:transmission-tower-export
    register_type: holding
    address: 520
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Energy Sold"
    id: deye_Daily_Energy_Sold
    icon: mdi:transmission-tower-import
    register_type: holding
    address: 521
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Total Energy Bought"
    id: deye_Total_Energy_Bought
    register_type: holding
    address: 522
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Total Energy Sold"
    id: deye_Total_Energy_Sold
    register_type: holding
    address: 524
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1

  - platform: modbus_controller #Total Consumption
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Total Consumption"
    id: deye_Total_Consumption
    register_type: holding
    address: 527
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Power Generation Today"
    id: deye_power_generation_today
    register_type: holding
    address: 501
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: S_WORD
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Current L1"
    id: deye_Grid_Current_L1
    register_type: holding
    address: 630
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Current L2"
    id: deye_Grid_Current_L2
    register_type: holding
    address: 631
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: S_WORD   
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Current L3"
    id: deye_Grid_Current_L3
    register_type: holding
    address: 632
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Voltage L1"
    id: deye_Grid_Voltage_L1
    register_type: holding
    address: 598
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD     
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Voltage L2"
    id: deye_Grid_Voltage_L2
    register_type: holding
    address: 599
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD     
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Grid Voltage L3"
    id: deye_Grid_Voltage_L3
    register_type: holding
    address: 600
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    value_type: U_WORD

 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Internal Grid L1 Power"
    id: deye_Internal_Grid_L1_Power
    register_type: holding
    address: 604
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Internal Grid L2 Power"
    id: deye_Internal_Grid_L2_Power
    register_type: holding
    address: 605
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Internal Grid L3 Power"
    id: deye_Internal_Grid_L3_Power
    register_type: holding
    address: 606
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Internal Grid Total Power"
    id: deye_Internal_Grid_total_Power
    register_type: holding
    address: 607
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD   
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} External Grid L1 Power"
    id: deye_External_Grid_L1_Power
    register_type: holding
    address: 616
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} External Grid L2 Power"
    id: deye_External_Grid_L2_Power
    register_type: holding
    address: 617
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} External Grid L3 Power"
    id: deye_External_Grid_L3_Power
    register_type: holding
    address: 618
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD
 
  - platform: modbus_controller  
    modbus_controller_id: modbus_deye
    name: "${deye_name} External Grid Total Power"
    id: deye_external_Grid_total_power
    register_type: holding
    address: 619
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD

  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Load L1 Power"
    id: deye_Load_L1_Power
    register_type: holding
    address: 650
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Load L2 Power"
    id: deye_Load_L2_Power
    register_type: holding
    address: 651
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Load L3 Power"
    id: deye_Load_L3_Power
    register_type: holding
    address: 652
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD

  - platform: modbus_controller # Load totalpower
    modbus_controller_id: modbus_deye
    name: "${deye_name} Load Total Power" 
    id: deye_load_total_power
    register_type: holding
    address: 653
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD

  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Gen L1 Power"
    id: deye_Gen_L1_Power
    register_type: holding
    address: 664
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Gen L2 Power"
    id: deye_Gen_L2_Power
    register_type: holding
    address: 665
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD  
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Gen L3 Power"
    id: deye_Gen_L3_Power
    register_type: holding
    address: 666
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD

  - platform: modbus_controller # Gen totalpower
    modbus_controller_id: modbus_deye
    name: "${deye_name} Gen Total Power" 
    id: deye_Gen_total_power
    register_type: holding
    address: 667
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    #skip_updates: 5
    name: "${deye_name} Warning 1"
    id:  deye_warning_1
    register_type: holding
    address: 553
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Warning 2"
    id:  deye_warning_2
    register_type: holding
    address: 554
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Error 1"
    id:  deye_error_1
    register_type: holding
    address: 555
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Error 2"
    id:  deye_error_2
    register_type: holding
    address: 556
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Error 3"
    id:  deye_error_3
    register_type: holding
    address: 557
    accuracy_decimals: 0
    value_type: U_WORD
  
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Error 4"
    id:  deye_error_4
    register_type: holding
    address: 558
    accuracy_decimals: 0
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Failure Status Of Communication Board"
    id:  deye_Failure_status_of_communication_board
    register_type: holding
    address: 548
    accuracy_decimals: 0
    value_type: U_WORD
 
  # Battery
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Battery Charge"
    id: deye_Daily_Battery_Charge
    icon: mdi:battery-plus
    register_type: holding
    address: 514
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
  
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Daily Battery Discharge"
    id: deye_Daily_Battery_Discharge
    icon: mdi:battery-minus
    register_type: holding
    address: 515
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 75
    name: "${deye_name} Battery Total Charge"
    id:  deye_battery_total_charge
    register_type: holding
    address: 516
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 75
    name: "${deye_name} Battery Total Discharge"
    id:  deye_battery_total_discharge
    register_type: holding
    address: 518
    unit_of_measurement: "kWh"
    state_class: "total_increasing"
    device_class: energy
    accuracy_decimals: 1
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Temperature"
    id:  deye_battery_temperature
    register_type: holding
    address: 586
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    value_type: U_WORD 
    filters:
      - offset: -1000
      - multiply: 0.1
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Voltage"
    id: deye_battery_voltage
    register_type: holding
    address: 587  
    unit_of_measurement: "V"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    name: "${deye_name} Battery Capacity"
    id: deye_battery_capacity
    register_type: holding
    address: 588
    unit_of_measurement: "%"
    state_class: "measurement"
    accuracy_decimals: 1
    value_type: U_WORD
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Output Power"
    id: deye_Battery_output_power
    register_type: holding
    address: 590
    unit_of_measurement: "W"
    state_class: "measurement"
    accuracy_decimals: 0
    value_type: S_WORD 
 
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Output Current"
    id: deye_Battery_output_current
    register_type: holding
    address: 591
    unit_of_measurement: "A"
    state_class: "measurement"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: S_WORD

text_sensor:
# Template text sensors
  - platform: template
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
  
  # Modbus to DEYE Inverter
  - platform: modbus_controller
    modbus_controller_id: modbus_deye
    # skip_updates: 5
    id: deye_Running_Status
    bitmask: 0
    register_type: holding
    address: 500
    raw_encode: HEXBYTES
    name: "${deye_name} Running Status"
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("standby");
        case 1: return std::string("selfcheck");
        case 2: return std::string("normal");
        case 3: return std::string("alarm");
        case 4: return std::string("fault");
        default: return std::string("----");
      }
      return x;


# Slider
number:
  
  # Modbus to DEYE Inverter
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: modbus_deye
    id: deye_Maximum_battery_charge_current
    name: "${deye_name} Maximum Battery Charge Current"
    unit_of_measurement: A
    address: 108
    min_value: 0
    max_value: 240
    mode: slider
    step: 1
    value_type: U_WORD
    entity_category: config
    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: modbus_deye
    id: deye_Maximum_battery_discharge_current
    name: "${deye_name} Maximum Battery Discharge Current"
    unit_of_measurement: A
    address: 109
    min_value: 0
    max_value: 240
    mode: slider
    step: 1
    value_type: U_WORD
    entity_category: config

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Maximum_battery_grid_charge_current
  #   name: "${deye_name} Maximum Battery Grid Charge Current"
  #   unit_of_measurement: A
  #   address: 128
  #   min_value: 0
  #   max_value: 240
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
  
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_max_solar_sell_power
  #   name: "${deye_name} Max Solar Sell Power"
  #   unit_of_measurement: W
  #   address: 143
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_1
  #   name: "${deye_name} Time Point 1 Start"
  #   address: 148
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_2
  #   name: "${deye_name} Time Point 2 Start"
  #   address: 149
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_3
  #   name: "${deye_name} Time Point 3 Start"
  #   address: 150
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_4
  #   name: "${deye_name} Time Point 4 Start"
  #   address: 151
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_5
  #   name: "${deye_name} Time Point 5 Start"
  #   address: 152
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_6
  #   name: "${deye_name} Time Point 6 Start"
  #   address: 153
  #   min_value: 0
  #   max_value: 2359
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_1_power
  #   name: "${deye_name} Time Point 1 Power"
  #   unit_of_measurement: W
  #   address: 154
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_2_power
  #   name: "${deye_name} Time Point 2 Power"
  #   unit_of_measurement: W
  #   address: 155
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_3_power
  #   name: "${deye_name} Time Point 3 Power"
  #   unit_of_measurement: W
  #   address: 156
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_4_power
  #   name: "${deye_name} Time Point 4 Power"
  #   unit_of_measurement: W
  #   address: 157
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_5_power
  #   name: "${deye_name} Time Point 5 Power"
  #   unit_of_measurement: W
  #   address: 158
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_6_power
  #   name: "${deye_name} Time Point 6 Power"
  #   unit_of_measurement: W
  #   address: 159
  #   min_value: 0
  #   max_value: 12000
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_1_capacity
  #   name: "${deye_name} Time Point 1 Capacity"
  #   unit_of_measurement: "%"
  #   address: 166
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_2_capacity
  #   name: "${deye_name} Time Point 2 Capacity"
  #   unit_of_measurement: "%"
  #   address: 167
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_3_capacity
  #   name: "${deye_name} Time Point 3 Capacity"
  #   unit_of_measurement: "%"
  #   address: 168
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_4_capacity
  #   name: "${deye_name} Time Point 4 Capacity"
  #   unit_of_measurement: "%"
  #   address: 169
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_5_capacity
  #   name: "${deye_name} Time Point 5 Capacity"
  #   unit_of_measurement: "%"
  #   address: 170
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config
    
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_Time_point_6_capacity
  #   name: "${deye_name} Time Point 6 Capacity"
  #   unit_of_measurement: "%"
  #   address: 171
  #   min_value: 0
  #   max_value: 100
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config

  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   id: deye_max_solar_power
  #   name: "${deye_name} Max Solar Sell Power"
  #   unit_of_measurement: W
  #   address: 340
  #   min_value: 0
  #   max_value: 15600
  #   mode: slider
  #   step: 1
  #   value_type: U_WORD
  #   entity_category: config

switch:
  # NTC Aditional BMS Wire Temperature Sensor
  - platform: gpio
    pin: GPIO1
    id: ntc_vcc

  # Modbus to DEYE Inverter
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Type Lithium"
    register_type: holding
    address: 98
    bitmask: 1
    entity_category: config
    icon: "mdi:toggle-switch"
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Solar Sell"
  #   register_type: holding
  #   address: 145
  #   bitmask: 1
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Grid Charge"
  #   register_type: holding
  #   address: 130
  #   bitmask: 1
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Advanced peak shaving and valley filling function enabled
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Of Use" 
  #   id: deye_Time_of_Use
  #   register_type: holding
  #   address: 146
  #   bitmask: 1
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 1 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 1 Charge Enable"
  #   register_type: holding
  #   address: 172
  #   bitmask: 1   # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 2 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 2 Charge Enable"
  #   register_type: holding
  #   address: 173
  #   bitmask: 1    # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 3 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 3 Charge Enable"
  #   register_type: holding
  #   address: 174
  #   bitmask: 1    # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 4 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 4 Charge Enable"
  #   register_type: holding
  #   address: 175
  #   bitmask: 1    # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 5 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 5 Charge Enable"
  #   register_type: holding
  #   address: 176
  #   bitmask: 1    # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
  # - platform: modbus_controller  # Time point 6 enable grid or gen charge
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Time Point 6 Charge Enable"
  #   register_type: holding
  #   address: 177
  #   bitmask: 1    # 1 = grid charging enable 2 = gen charging enable
  #   entity_category: config
  #   icon: "mdi:toggle-switch"
 
 
select:
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: modbus_deye
    name: "${deye_name} Energy Priority"
    address: 141
    value_type: U_WORD
    optionsmap:
      "Battery first": 0
      "Load first": 1
    entity_category: config
  # - platform: modbus_controller
  #   use_write_multiple: true
  #   modbus_controller_id: modbus_deye
  #   name: "${deye_name} Limit Control Mode"
  #   address: 142
  #   value_type: U_WORD
  #   optionsmap:
  #     "Selling first": 0
  #     "Zero export to load": 1
  #     "Zero export to CT": 2
  #   entity_category: config    
  - platform: modbus_controller
    use_write_multiple: true
    modbus_controller_id: modbus_deye
    name: "${deye_name} Battery Control Mode"
    address: 111
    value_type: U_WORD
    optionsmap:
      "Use Battery V": 0
      "Use Battery %": 1
      "No Battery": 2
    entity_category: config